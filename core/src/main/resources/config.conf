#####################################################################################
#                             MultiLogin - config.conf
#
# 配置文件格式为 ‘HOCON’，
# 前往 ‘https://github.com/ustc-zzzz/HOCON-CN-Translation’ 以阅读 ‘HOCON’ 配置语法。
#
# 所有节点在指定了默认值的条件下都可以忽略不写。
# 配置比较繁琐和复杂，请仔细阅读注释后操作！
#
#  GITHUB:   https://github.com/CaaMoe/MultiLogin
#  WIKI:     https://github.com/CaaMoe/MultiLogin/wiki
#  LICENSE:  GPL-3.0
#
#
# Yggdrasil 账户验证服务器通用配置:
#  配置 Blessing Skin Yggdrasil API 类验证服务器:
#    yggdrasilService.blessingSkin = {
#        id = 0
#        body = {
#            # 假设当前 Blessing Skin 的 Yggdrasil api 地址为 {3}
#            url = """{3}/sessionserver/session/minecraft/hasJoined?username={0}&serverId={1}{2}"""
#        }
#    }
#
#  配置 统一通行证 类验证服务器:
#    yggdrasilService.nide8 = {
#        id = 1
#        body = {
#            # 假设当前服务器 UID 为 {3}
#            url = """https://auth2.nide8.com:233/{3}/sessionserver/session/minecraft/hasJoined?username={0}&serverId={1}{2}"""
#        }
#    }
#####################################################################################

# 在此处设置所有的 Yggdrasil 账户验证服务器
yggdrasilServices = {

    # 这是一个示例配置，请不要直接复用此节点来使用！
    # 此版本下的节点名称没有任何意义，请留意 id 子节点的设置。
    # 请仿写此节点用来添加新的 Yggdrasil 账户验证服务器。
    demo = {

        # 此值初次编辑好后不建议再次更改它，他作为 Yggdrasil 账户验证服务器的唯一标识！
        # 随意更改将会导致部分玩家数据混乱或丢失，请慎重操作！！！
        # 必须值，取值范围为整数 0 ~ 255
        id = 0

        # 是否启用该验证服务器。
        # 当值为 ‘false’ 时将不会添加该 Yggdrasil 账户验证服务器到混合登录系统中去，并且将拒绝一切使用该 Yggdrasil 账户验证服务器的玩家登录游戏。
        # 默认值 ‘true’。
        enable = false

        # Yggdrasil 账户验证服务器 HasJoined 阶段的访问属性设置。
        body = {

            # Yggdrasil 账户验证服务器验证登录链接设置。
            # 此节点必须指定完整的请求链接，并且对大小写非常敏感，设置请留意。
            #
            # 占位变量列表：
            #   序号     别称           简介
            #   {0}      {username}    请求的 username
            #   {1}      {serverId}    请求的 serverId
            #   {2}      {ip}          请求的 ip（ipContent 节点值）
            #
            # 一些例子:
            #      GET:  ‘https://example.com/session/minecraft/hasJoined?username={username}&serverId={serverId}{ip}’
            #      GET:  ‘https://example.com/session/minecraft/hasJoined?username={0}&serverId={1}{2}’
            #      GET:  ‘https://example.com/session/minecraft/hasJoined?username={username}&serverId={serverId}’
            #      POST: ‘https://example.com/session/minecraft/hasJoined’
            # 必填值
            url = """https://example.com/session/minecraft/hasJoined?username={0}&serverId={1}"""

            # 验证阶段使用 POST 请求的方式验证账户身份。
            # 请注意，绝大多数情况下， Yggdrasil 账户验证服务器登录验证阶段都是采用 GET 请求方式验证用户数据的，
            # 如果你不了解当前 Yggdrasil 验证流程的话，请勿擅自改动它，否则将无法正确访问目标验证服务器。
            # 默认值 ‘false’
            postMode = false

            # 验证时是否向 Yggdrasil 账户验证服务器传递用户 IP 信息，如果此信息被正常捕获的话。
            # 默认值 ‘false’
            passIp = false

            # 设置 url 和 postContent 节点 {ip} 变量内容。
            # 此节点作用是使 ip 信息正常拼接到请求块中去。
            #
            # 占位变量列表：
            #   序号     别称           简介
            #   {0}     {ip}           请求的 ip（玩家 ip）
            #
            # 请注意，仅当 passIp 节点为 ‘true’ 时此节点有效。
            # 请求的 URL 对大小写敏感，设置需谨慎！
            # 请留意字符串拼接的特殊值 '&' 和 ', '
            # 一些例子:
            #      GET:  ‘&ip={ip}’
            #      POST: ‘, "ip":"{0}"’
            # 默认值 ‘&ip={0}’
            ipContent = """&ip={0}"""

            # 发送 POST 验证请求的内容。
            # 也许目标验证服务器对请求内容的大小写非常敏感，设置请留意。
            #
            # 占位变量列表：
            #   序号     别称           简介
            #   {0}      {username}    请求的 username
            #   {1}      {serverId}    请求的 serverId
            #   {2}      {ip}          请求的 ip（ipContent 节点值）
            #
            # 一些例子:
            #        ‘{"username":"{username}", "serverId":"{serverId}"{ip}}’
            #        ‘{"username":"{username}", "serverId":"{serverId}"}’
            # 默认值 ‘{"username":"{username}", "serverId":"{serverId}"}’
            postContent = """{"username":"{0}", "serverId":"{1}"}"""
        }

        # 设置玩家首次登录服务器后分配给 ta 的 UUID
        # 请使用以下值:
        #   DEFAULT   - 使用 Yggdrasil 账户证服务器提供的在线 UUID
        #   OFFLINE   - 使用玩家名字获取到的离线 UUID
        #   RANDOM    - 随机 UUID
        # 请谨慎设置和修改此节点，避免增加日后维护的心智负担。
        # 如果只是想试用本插件，强烈建议设置为 ‘DEFAULT’，否则在禁用此插件后玩家数据将被打乱。
        # 默认值 ‘DEFAULT’
        transformUuid = DEFAULT

        # 设置当前 Yggdrasil 验证服务器下的用户名正则约束。
        # 若不匹配将会拒绝当前玩家的登录请求。
        # 如果此值留空或未设置，则不启用此功能。
        # 默认值 ‘’
        nameAllowedRegular = """ """

        # 是否为当前验证服务器单独开启白名单功能。
        # 当全局白名单为 true 时，此值无效。
        # 默认值 ‘false’
        whitelist = false

        # 设置占线登录机制，登录时游戏内存在有相同游戏内 UUID 的玩家时将会进行操作。
        # 当此值为 ‘false’ 时，将把游戏内的玩家踢出，允许验证中的玩家登录（原版默认）。
        # 当此值为 ‘true’ 时，将拒绝验证中的玩家登录，游戏内的玩家不受影响。
        # 默认值 ‘false’
        refuseRepeatedLogin = false

        # 验证网络错误时的重试次数。
        # 默认值 ‘0’
        authRetry = 0

        # 皮肤修复设定
        skinRestorer = {

            # 皮肤修复规则设定，用来解决不同 Yggdrasil 账户验证服务器下的皮肤不可见问题。
            # 此功能只是将不含有 Mojang 签名的皮肤修复成含有 Mojang 签名的皮肤。
            # 请使用以下值:
            #   OFF       - 关闭这个功能
            #   LOGIN     - 占用登录时间进行皮肤修复操作（修复时间过长可能会导致登录超时）
            #   ASYNC     - 登录后修复（修复成功后需要重新连接服务器）
            # 皮肤修复服务器来自 ‘mineskin.org’
            # 默认值 ‘OFF’
            restorer = OFF

            # 皮肤修复方式。
            # 请使用以下值:
            #   URL        - 皮肤修复服务器将会主动获取验证返回的皮肤数据，请确保它能被皮肤修复服务器正确访问。（推荐使用）
            #   UPLOAD     - 尝试直接上传至皮肤修复服务器，适用于皮肤修复服务器访问皮肤材质受阻的情况。
            # 默认值 ‘URL’
            method = URL

            # 皮肤修复网络错误时的重试次数。
            # 默认值 ‘2’
            retry = 2
        }
    }

    # 此节点代表 Minecraft 原版验证（微软验证）
    # 此为最简配置。
    official = {
        id = 1
        body = {
            url = """https://sessionserver.mojang.com/session/minecraft/hasJoined?username={0}&serverId={1}{2}"""
        }
    }
}

# 设置所有网络请求的超时时间
# 默认值 ‘10000’
servicesTimeOut = 10000

# 皮肤修复请求延迟
# 过小的值会被皮肤修复服务器拒绝访问；
# 过大的值可能会导致登录超时。
# 默认值 ‘5000’
skinRestorerRetryDelay = 5000

# 全局白名单开关
# 默认值 ‘true’
globalWhitelist = true

# 插件数据的存放方式
sql = {

    # 数据库类型设置
    # 请使用以下值:
    #   H2        - 推荐使用
    #   MYSQL
    # 默认值 ‘H2’
    backend = H2

    # 数据库访问地址
    # 默认值 ‘127.0.0.1’
    ip = 127.0.0.1
  
    # 端口
    # 默认值 ‘3306’
    port = 3306
  
    # 用户名
    # 必须值
    username = root
  
    # 访问密码
    # 必须值
    password = 12345
  
    # 数据库名称
    # 请不要随意更改它，否则数据将消失
    # 默认值 ‘multilogin’
    database = multilogin
  
    # 使用的数据表前缀
    # 请不要随意更改它，否则数据将消失
    # 默认值 ‘multilogin’
    tablePrefix = multilogin
}